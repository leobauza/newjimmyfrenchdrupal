<?php
/**
 * @file
 * jfm module file
 */

require_once 'jfm.core.inc';

function jfm_theme($existing, $type, $theme, $path) {
  $theme = array(
    'alert_banner' => array(
      'template' => 'alert-banner',
      'path' => drupal_get_path('module', 'jfm') . '/tpl'
    ),
  );

  return $theme;

}

/**
 * Implements hook_block_info()
 */
function jfm_block_info() {
  module_load_include('inc', 'jfm', 'inc/block.info');
  $blocks = array();
  $blocks['alert_banner'] = makeInfo('Alert Banner');
  return $blocks;
}

/**
 *  Implements hook_block_view()
 *  @todo
 *    - add documentation about block.view and moduleView()
 */
function jfm_block_view($delta = '') {
  module_load_include('inc', 'jfm', 'inc/block.view');
  $block = array();
  $block['content'] = moduleView($delta); // delta must mach theme key
  return $block;
}

/**
 *  Implements hook_block_configure()
 *  @todo
 *    - add documentation about block.conf and moduleConfigure()
 */
function jfm_block_configure($delta = '') {
  module_load_include('inc', 'jfm', 'inc/block.conf');
  return moduleConfigure($delta);
}

/**
 * Implements hook_block_save()
 * @todo
 *   - add documentation about block.conf and moduleSave()
 */
function jfm_block_save($delta = '', $edit = array()) {
  module_load_include('inc', 'jfm', 'inc/block.conf');
  moduleSave($delta, $edit);
}


/**
 * Contact Form Ajaxify
 */

function jfm_menu() {
  $items = array();
  $items['webform_ajax/%'] = array(
    'page callback' => '_custom_webform_ajax',
    'page arguments' => array(1,2),
    'access callback' => '_custom_webform_ajax_access',
  );
  return $items;
}

function _custom_webform_ajax($nid, $data) {

  $local_POST = $_POST;
  $form_build_id = $_POST['form_build_id'];

  $form_id = 'webform_client_form_' . $nid;

  $node = node_load($nid);

  $submission = array();
  $form_state = array(
    'method' => 'post',
    'submitted' => false,
    'values' => array(),
    'build_info' => array(
      'args' => array(
        $node,
        array(),
        FALSE
      )
    )
  );

  $form = form_get_cache($form_build_id, $form_state);
  $form_array = drupal_rebuild_form($form_id, $form_state);

  // Add the clicked button before processing the form
  $form_state['clicked_button'] = $form_array['actions']['submit'];

  // Process the form?
  if (is_array($local_POST['submitted'])) {
    foreach ($local_POST['submitted'] as $submit_index => $submit) {
      $form_state['values']['submitted'][$submit_index] = $submit;
    }
  }

  // Clearing empty values from $form_state
  if (is_array($form_state['values']['submitted'])) {
    foreach ($form_state['values']['submitted'] as $value_index => $value) {
      if (!$value) {
        unset($form_state['values']['submitted'][$value_index]);
      }
    }
  }

  $form_state['values']['details']['nid'] = $nid;
  $form_state['no_redirect'] = TRUE;

  // Executing the pressed button action
  drupal_build_form($form_id, $form_state);

  if (!$form_state['executed']) {
    // If the form didn't submit successfully, get the errors
    // which are set by drupal_set_message
    $title = "Sorry, there was an error";
    $messages = drupal_get_messages('error');
    $messages = implode('<br />', $messages['error']);
  }
  else {
    // If form submitted successfully, create a nice message.
    $title = 'Thank You!';
    $messages = 'I will get back to you shortly.';
  }
  // drupal_json_output seems to confuse some browsers, who want to save as a file
  print drupal_json_encode(array(
    'title' => $title,
    'message' => $messages,
    'status' => $form_state['executed'],
  ));

  // return drupal_json_output(array(
  //   'message' => t('Your submission has been received. Thank you for contacting us.'),
  //   'status' => 'sent',
  // ));

}

function _custom_webform_ajax_access() {
  // todo: Add user role / perm check
  return true;
}

// webform
function jfm_form_alter(&$form, &$form_state, $form_id) {

  if(strstr($form_id, 'webform_client_form_')) {
    $form['#attributes']['data-id'] = $form['#node']->nid;
    drupal_add_js(array(
      'forms' => array(
        $form['#node']->title => $form['#node']->nid
      )
    ), 'setting');

  }

}
